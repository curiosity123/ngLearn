{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Create-learning-set/Create-learning-set.component.ts","webpack:///src/app/Create-learning-set/Create-learning-set.component.html","webpack:///src/app/Help/Help.component.ts","webpack:///src/app/Help/Help.component.html","webpack:///src/app/Home/Home.component.ts","webpack:///src/app/Home/Home.component.html","webpack:///src/app/Lesson/Lesson.component.ts","webpack:///src/app/Lesson/Lesson.component.html","webpack:///src/app/Login/Login.component.ts","webpack:///src/app/Login/Login.component.html","webpack:///src/app/Register/Register.component.ts","webpack:///src/app/Register/Register.component.html","webpack:///src/app/Settings/Settings.component.ts","webpack:///src/app/Settings/Settings.component.html","webpack:///src/app/Stats/Stats.component.ts","webpack:///src/app/Stats/Stats.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/lesson-summary/lesson-summary.component.ts","webpack:///src/app/lesson-summary/lesson-summary.component.html","webpack:///src/app/searching-module/searching-module.component.ts","webpack:///src/app/searching-module/searching-module.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CreateLearningSetComponent","_formBuilder","typesOfShoes","selector","templateUrl","styleUrls","HelpComponent","HomeComponent","dialog","authService","open","LessonComponent","http","route","router","Item","indx","AnswerVisibility","separators","finished","sub","params","subscribe","console","log","getLearningItems","learningSetId","user","JSON","parse","localStorage","getItem","results","Array","get","toString","response","Items","showNewItem","length","words","splt","sentenceWithGaps","answers","i","includes","replace","disableClose","learningProgress","lp","ownerId","Number","parseInt","learningItemId","memorizedLevel","push","post","x","error","IsError","signs","sentence","s","split","join","correctWords","correctSentence","LoginComponent","authservice","dialogRef","loginCorrect","login","pass","userName","Password","next","close","window","location","reload","Login","RegisterComponent","loginAvailable","passwordCorrect","register","password","ifUserExist","valueOf","checkIfExist","checkIfPasswordCorrect","SettingsComponent","StatsComponent","step","getCourses","index","set","name","navigate","learningSets","summaries","getProgress","res","setId","courseId","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","auth","title","username","loggedIn","opened","NavBar","rslt","logout","stats","search","create","settings","help","tokenGetter","AppModule","config","whitelistedDomains","blacklistedRoutes","declarations","providers","bootstrap","AuthService","baseUrl","apiUrl","helper","model","pipe","setItem","token","stringify","decodedToken","decodeToken","removeItem","isTokenExpired","providedIn","LessonSummaryComponent","firstNameElement","nativeElement","focus","document","getElementById","SearchingModuleComponent","getLearningSets","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators,ReactiveFormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-Create-learning-set',\n  templateUrl: './Create-learning-set.component.html',\n  styleUrls: ['./Create-learning-set.component.css']\n})\nexport class CreateLearningSetComponent implements OnInit {\n\n   typesOfShoes: string[] = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n \n  }\n\n}\n","<br>\n<br>\n<mat-selection-list #shoes class=\"\" >\n  <mat-list-option *ngFor=\"let shoe of typesOfShoes\">\n    {{shoe}}\n  </mat-list-option>\n</mat-selection-list>\n\n\n<mat-card class=\"m-5 background-image text-center\" color=\"primary\">\n\n  <div class=\"baby text-center mt-3 \">\n    <mat-label class=\"h3 row\">Create new item</mat-label>\n  </div>\n\n  <mat-card-content class=\"ml-4 mt-4 text-center\">\n\n    <div class=\"text-center baby\">\n\n      <div class=\"baby text-center\">\n        <p>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Missing word</mat-label>\n            <input matInput placeholder=\"placeholder\" autocomplete=\"off\" autofocus #gap>\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Clue or synonyms: </mat-label>\n            <input matInput placeholder=\"placeholder\" autocomplete=\"off\" autofocus #gap>\n          </mat-form-field>\n        </p>\n        <p>\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Sentence with gaps (use _):</mat-label>\n            <input matInput placeholder=\"placeholder\" autocomplete=\"off\" autofocus #gap>\n          </mat-form-field>\n        </p>\n        <p>\n\n          <mat-form-field appearance=\"standard\">\n            <mat-label>Full sentence:</mat-label>\n            <input matInput placeholder=\"placeholder\" autocomplete=\"off\" autofocus #gap>\n          </mat-form-field>\n        </p>\n      </div>\n\n      <br>\n      <div class=\"baby text-center row\">\n        <mat-label class=\"h2 row\" style=\"color: blue;\">\"test\"</mat-label>\n      </div>\n\n      <br>\n      <br>\n\n    </div>\n    <br>\n    <div class=\"text-center\">\n      <button mat-raised-button color=\"primary\" class=\"mb-4 text-center\">Save</button>\n    </div>\n\n    <br>\n\n\n  </mat-card-content>\n\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './Help.component.html',\n  styleUrls: ['./Help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"full-height\">\n<br>\n<br>\n<h1 class=\"text-center \">Not available now :(</h1>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../Login/Login.component';\nimport { AuthService } from '../auth.service';\nimport { RegisterComponent } from '../Register/Register.component';\n\n@Component({\n  selector: 'app-Home',\n  templateUrl: './Home.component.html',\n  styleUrls: ['./Home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  authService: AuthService;\n  constructor(public dialog: MatDialog, authService: AuthService) {\n    this.authService = authService;\n  }\n\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n  openRegisterDialog() {\n    this.dialog.open(RegisterComponent);\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","\n<div *ngIf=\"!authService.loggedIn()\" class=\"text-center \">\n  <br>\n  <br>\n  <br>\n  <h1>Welcome!</h1>\n  <br>\n  <h2 class=\"m-4\">If you want to use my app please register your account or sign-in...</h2>\n  <br>\n\n  <button mat-raised-button color=\"primary\" class=\"m-4\" selected (click)=\"openRegisterDialog()\" *ngIf=\"!authService.loggedIn()\" style=\"background-color: seagreen; width : 10em; height: 3em;\" >Register</button>\n  <button mat-raised-button color=\"primary\" class=\"m-4\"  (click)=\"openLoginDialog()\" *ngIf=\"!authService.loggedIn()\"  style=\"background-color: seagreen; width : 10em; height: 3em;\">Sign in</button>\n</div>\n\n\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport 'rxjs/operators';\nimport { map, tap } from 'rxjs/operators';\nimport { LearningItem } from 'src/models/LearningItem';\nimport { FormsModule } from '@angular/forms'\nimport { LessonSummaryComponent } from '../lesson-summary/lesson-summary.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { userInfo } from 'os';\nimport { User } from 'src/models/User';\nimport { LearningProgress } from 'src/models/LearningProgress';\nimport { Console } from 'console';\n\n\n\n\n@Component({\n  selector: 'app-Lesson',\n  templateUrl: './Lesson.component.html',\n  styleUrls: ['./Lesson.component.css']\n})\nexport class LessonComponent implements OnInit {\n\n\n\n\n  constructor(private http: HttpClient, public dialog: MatDialog, private route: ActivatedRoute,\n    private router: Router) {\n\n  }\n  Item: LearningItem = null;\n  indx = 0;\n  Items: LearningItem[];\n  AnswerVisibility = false;\n  answers: string[];\n  indexesOfGaps;\n  IsError;\n  separators: string[] = [' ', '/', '?', '!', '.', ','];\n  finished = false;\n  words: string[];\n  user: User;\n  results: boolean[];\n\n  ngOnInit() {\n\n    var sub = this.route.params.subscribe(params => {\n\n      console.log(params['id']);\n      this.getLearningItems(params['id']);\n    });\n\n  }\n\n\n\n\n\n\n\n  getLearningItems(learningSetId: number) {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.results = new Array();\n    this.http.get('http://localhost:5000/api/' + this.user.id + '/content/' + learningSetId.toString() + '/GetItems')\n      .subscribe((response: LearningItem[]) => {\n        this.Items = response;\n        this.showNewItem();\n      });\n  }\n\n  showNewItem() {\n    console.log(this.Items.length);\n    if (this.indx < this.Items.length) {\n      this.Item = this.Items[this.indx];\n      this.words = this.splt(this.separators, this.Items[this.indx].sentenceWithGaps);\n      this.answers = this.splt(this.separators, this.Items[this.indx].sentenceWithGaps);\n\n      for (let i = 0; i < this.words.length; i++) {\n        if (!this.words[i].includes('_'))\n          this.answers[i] = null;\n        else\n          this.answers[i] = this.answers[i].replace('_', '');\n      }\n      this.indx++;\n    }\n    else {\n\n      this.dialog.open(LessonSummaryComponent, { disableClose: true });\n\n      this.user = JSON.parse(localStorage.getItem('user'));\n\n      let learningProgress = new Array<LearningProgress>();\n      console.log(this.results);\n\n      for (let i = 0; i < this.Items.length; i++) {\n        const lp = { ownerId: Number.parseInt(this.user.id), learningItemId: this.Items[i].id, memorizedLevel: this.results[i] } as LearningProgress;\n        learningProgress.push(lp);\n      }\n\n      console.log(\"Progressy:\" + learningProgress);\n      this.http.post('http://localhost:5000/api/' + this.user.id + '/content/UpdateProgress', learningProgress).subscribe(\n        x => {\n          console.log(x);\n    \n        },\n        error => console.log(error)\n      );\n    }\n  }\n\n\n  nextQuestion() {\n    this.IsError = false;\n    this.showNewItem();\n    this.AnswerVisibility = false;;\n  }\n\n  splt(signs: string[], sentence: string): string[] {\n    for (let s in signs) {\n      sentence = sentence.split(signs[s]).join('#');\n    }\n    return sentence.split('#');\n  }\n\n  checkAnswer() {\n    this.AnswerVisibility = true;\n    this.IsError = false;\n    const correctWords = this.splt(this.separators, this.Items[this.indx - 1].correctSentence);\n    for (let i = 0; i < this.words.length; i++) {\n      if (this.answers[i] != null && (correctWords[i] !== this.answers[i])) {\n        this.IsError = true;\n      }\n\n    }\n    this.results.push(!this.IsError);\n\n\n\n  }\n\n\n\n}\n","<div class=\"full-height\">\n  <br>\n  <br>\n<mat-card class=\" m-5 background-image text-center\" color=\"primary\" *ngIf=\"!finished\" \n[ngClass]=\"{ glassy: !AnswerVisibility && (IsError || !IsError), error: AnswerVisibility && IsError, correct: AnswerVisibility && !IsError }\" >\n  <mat-progress-bar mode=\"determinate\" class=\"row ml-2 mr-5\" [value]=\"(indx*this.Items.length)\"></mat-progress-bar>\n\n  <div class=\"baby text-center mt-3 \">\n    <mat-label class=\"h3 row\" *ngIf=\"!AnswerVisibility\">Fill gaps below...</mat-label>\n  </div>\n\n  <mat-card-content class=\"ml-4 mt-4 text-center\" >\n\n    <div *ngIf=\"AnswerVisibility\" class=\"text-center baby\">\n\n      <div *ngIf=\"!IsError\" >\n\n        <!-- <i class=\"fa fa-smile-o fa-5x\" aria-hidden=\"true\" style=\"color: green;\"></i> -->\n        <h1><strong>Correct answer </strong> </h1>\n      </div>\n      <div *ngIf=\"IsError\" >\n\n        <!-- <i class=\"fa fa-frown-o fa-5x\" aria-hidden=\"true\" style=\"color:orangered;\"></i> -->\n        <h1><strong>Incorrect answer</strong> </h1>\n      </div>\n      <br>\n      <mat-label class=\"h6\">Correct answer was... </mat-label>\n      <h1><strong>{{Item?.item}}</strong> </h1>\n      <br>\n      <mat-label class=\"h6\">Full sentence:</mat-label>\n      <div class=\" m-3\" *ngIf=\"AnswerVisibility\">\n        <h1 class=\"h2 text-center\"> {{Item?.correctSentence}}</h1>\n      </div>\n      <button mat-raised-button color=\"primary\" class=\"mb-4 row\"  *ngIf=\"AnswerVisibility\"\n         #nextBtn autofocus  (click)=\"nextQuestion()\">Next\n        question</button>\n    </div>\n\n\n    <div *ngIf=\"!AnswerVisibility\" class=\"text-center baby\">\n      <div class=\"baby text-center\">\n        <mat-label class=\"h6 row\">Clue: </mat-label>\n      </div>\n      <br>\n      <div class=\"baby text-center row\">\n        <mat-label class=\"h2 row\" style=\"color: blue;\">\"{{Item?.description}}\"</mat-label>\n      </div>\n      <br>\n      <br>\n      <br>\n      <ng-container *ngFor=\"let word of words index as i\" class=\"container-name \">\n\n        <div class=\"baby text-center\">\n          <mat-form-field appearance=\"standard\" class=\"mr-4\" *ngIf=\"word.includes('_')\" style=\"width: 90px;\">\n            <input matInput placeholder=\"{{word}}\" [(ngModel)]=\"answers[i]\" autocomplete=\"off\"\n              (keyup.enter)=\"checkAnswer()\" autofocus #gap>\n          </mat-form-field>\n          <h1 *ngIf=\"!words[i].includes('_')\">{{word}}&nbsp;</h1>\n        </div>\n      </ng-container>\n      <br>\n\n      <div class=\"ml-0\">\n        <div class=\"row\">\n          <div class=\"col\">\n\n          </div>\n          <div class=\"col-6\">\n            <button mat-raised-button color=\"primary\" class=\"mb-4 text-center\" *ngIf=\"!AnswerVisibility\"\n          (click)=\"checkAnswer()\">Check</button>\n          </div>\n          <div class=\"col\">\n\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <br>\n    </div>\n\n\n  </mat-card-content>\n\n</mat-card>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/models/User';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n\n@Component({\n  selector: 'app-Login',\n  templateUrl: './Login.component.html',\n  styleUrls: ['./Login.component.css']\n})\nexport class LoginComponent implements OnInit  {\n\n\n  dialog: MatDialogRef<LoginComponent>;\n  constructor(private authservice: AuthService, dialogRef: MatDialogRef<LoginComponent>) {\n    this.dialog = dialogRef;\n  }\n  loginCorrect = false;\n\n  ngOnInit() {\n  }\n\n\n  Login(login, pass) {\n\n    const user = { userName: login, Password: pass } as User;\n\n    this.authservice.login(user).subscribe(next => {\n      this.dialog.close();\n      this.loginCorrect = false;\n      console.log(\"cor\");\n      window.location.reload();\n\n    }, error => {\n      this.loginCorrect = true;\n      console.log(\"errrr\");\n    });\n\n  }\n}\n","\n<h2 class=\"text-center mb-4\">Sign in</h2>\n      <p>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Enter your login</mat-label>\n          <input matInput placeholder=\"Login\"  (keyup.enter)=\"Login(login.value,password.value)\" #login >\n          <mat-icon matSuffix><i class=\"fa fa-user\"></i></mat-icon>\n          <!-- <mat-hint>Login</mat-hint> -->\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Enter your password</mat-label>\n          <input matInput type=\"password\" placeholder=\"Password\"  (keyup.enter)=\"Login(login.value,password.value)\" #password>\n          <mat-icon matSuffix><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></mat-icon>\n          <!-- <mat-hint>Password</mat-hint> -->\n        </mat-form-field>\n      </p>\n      \n      <p class=\"text-center\">\n        <button mat-button mat-dialog-close mat-raised-button  color=\"primary\" class=\"mr-4\">Cancel</button>\n         <button mat-raised-button color=\"primary\" type=\"submit\"  (click)=\"Login(login.value,password.value)\">Sign in</button>\n\n      </p>\n      <p class=\"text-center\" *ngIf=\"loginCorrect\" >Incorrect login or password</p>\n     \n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/models/User';\nimport { AuthService } from '../auth.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-Register',\n  templateUrl: './Register.component.html',\n  styleUrls: ['./Register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private authservice: AuthService, dialogRef: MatDialogRef<RegisterComponent>) {\n    this.dialog = dialogRef;\n  }\n  dialog: MatDialogRef<RegisterComponent>;\n  ngOnInit() {\n  }\n  error = false;\n  loginAvailable = false;\n  passwordCorrect = false;\n\n  register(login, pass) {\n\n    if (this.loginAvailable && this.passwordCorrect) {\n      const user = { userName: login, Password: pass } as User;\n\n      this.authservice.register(user).subscribe(next => {\n        console.log();\n\n        const user = { userName: login, Password: pass } as User;\n\n        this.authservice.login(user).subscribe(next => {\n          this.dialog.close();\n          window.location.reload();\n        });\n\n        this.dialog.close();\n\n      }, error => { error = true; });\n    }\n  }\n\n  checkIfPasswordCorrect(login, password) {\n    if ((password as string).length > 4) {\n      this.passwordCorrect = true;\n    }\n    else {\n      this.passwordCorrect = false;\n    }\n  }\n\n  checkIfExist(login, password) {\n    if (login == \"\") {\n      this.loginAvailable = false;\n      return;\n    }\n\n    const user = { userName: login, Password: \"\" } as User;\n    this.authservice.ifUserExist(user).subscribe(next => {\n      console.log(next.valueOf());\n      this.loginAvailable = next.valueOf() as boolean;\n\n    });\n  }\n\n}\n","<h2 class=\"text-center mb-4\">Create account</h2>\n<p>\n  <mat-form-field appearance=\"legacy\">\n    <mat-label>Enter your login</mat-label>\n    <input matInput placeholder=\"Login\" (keyup.enter)=\"register(login.value,password.value)\" (keyup)=\"checkIfExist(login.value, password.value)\" #login>\n    <mat-icon matSuffix>\n      <i *ngIf=\"!loginAvailable\" class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n      <i *ngIf=\"loginAvailable\" class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n    </mat-icon>\n    <mat-hint *ngIf=\"loginAvailable\">available</mat-hint>\n    <mat-hint *ngIf=\"!loginAvailable\">already used</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Enter your password</mat-label>\n    <input matInput type=\"password\" placeholder=\"Password\" (keyup.enter)=\"register(login.value,password.value)\" (keyup)=\"checkIfPasswordCorrect(login.value, password.value)\"\n      #password>\n    <mat-icon matSuffix>\n      <i *ngIf=\"!passwordCorrect\" class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\n      <i *ngIf=\"passwordCorrect\" class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n    </mat-icon>\n    <mat-hint *ngIf=\"passwordCorrect\">Correct</mat-hint>\n    <mat-hint *ngIf=\"!passwordCorrect\">too short</mat-hint>\n  </mat-form-field>\n</p>\n<p class=\"text-center\">\n  <button mat-button mat-dialog-close mat-raised-button color=\"primary\" class=\"mr-4\">Cancel</button>\n  <button mat-raised-button mat-dialog-close color=\"primary\"\n    [disabled]=\"!loginAvailable || password.value=='' || !passwordCorrect\"\n    (click)=\"register(login.value,password.value)\">Register</button>\n\n\n</p>\n<p class=\"text-center\" *ngIf=\"error\">Error</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './Settings.component.html',\n  styleUrls: ['./Settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"full-height\">\n    <br>\n    <br>\n<h1 class=\"text-center \">Not available now :(</h1>\n\n</div> ","import { Component, OnInit } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/models/User';\nimport { CreateLearningSetComponent } from '../Create-learning-set/Create-learning-set.component';\nimport { LearningItem } from 'src/models/LearningItem';\nimport { LearningSet } from 'src/models/LearningSet';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Summary } from '@angular/compiler';\nimport { Progress } from 'src/models/Progress';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './Stats.component.html',\n  styleUrls: ['./Stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n\n\n  user: User;\n  learningSets: LearningSet[];\n  summaries: Array<Progress>;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getCourses();\n  }\n\n\n\n\n  step = 0;\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  startLearning(set: any) {\n    console.log(set.name);\n    this.router.navigate(['/lesson-component', set.id]);\n  }\n\n  deleteThisCourse(id: number) {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    console.log(id);\n    this.http.delete('http://localhost:5000/api/' + this.user.id + '/content/' + id + '/RemoveCourseFromMyBoard', {}).subscribe((\n      response: string) => {\n      console.log(response);\n      this.getCourses();\n    });\n\n  }\n\n  getCourses() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n\n    this.http.get('http://localhost:5000/api/' + this.user.id + '/content/GetMyCourses')\n      .subscribe((response: LearningSet[]) => {\n        ///\n        this.learningSets = response;\n        this.summaries = new Array<Progress>();\n        for (let i = 0; i < this.learningSets.length; i++) {\n          this.getProgress(this.learningSets[i].id.toString()).subscribe((res: Progress) => {\n            this.summaries.push(res);\n\n          });\n\n        }\n        ///\n      });\n  }\n\n  resetProgress(setId: number) {\n\n    this.user = JSON.parse(localStorage.getItem('user'));\n\n    this.http.post('http://localhost:5000/api/' + this.user.id + '/content/' + setId.toString() + '/resetProgress', {}).subscribe(\n      x => {\n        console.log(x);\n        this.getCourses();\n      },\n      error => console.log(error)\n    );\n\n  }\n\n\n  getProgress(courseId: string) {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    return this.http.get('http://localhost:5000/api/' + this.user.id + '/content/' + courseId + '/getProgress');\n\n  }\n}\n\n","<div  class=\"full-height\"  > \n\n\n<br>\n\n<h1 class=\"text-center \" >Your courses</h1>\n\n<div class=\"m-5\">\n\n\n  <mat-accordion class=\"example-headers-align \" >\n\n    <div *ngFor=\"let set of learningSets; let i = index\"> \n\n      <mat-expansion-panel class=\"mt-2 glassy \" [expanded]=\"step === i\" (opened)=\"setStep(i)\" hideToggle>\n\n        <mat-expansion-panel-header>\n          <mat-panel-title style=\"width: 100%;\">\n           <h2  class=\"cut-text mt-3\">{{set.name}}</h2>\n         \n           \n          </mat-panel-title>\n          <mat-panel-description  >\n           <h2 class=\"mt-3\" >{{summaries[i]?.progressInPercentage | number:'1.0-2'}}%</h2>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n<br>\n        <h4>{{set.description}}</h4>\n        <br>\n        <h2 class=\"mt-3 \">Author: root</h2>\n\n\n\n        <mat-action-row>\n          <button  mat-raised-button color=\"warn\"  (click)=\"deleteThisCourse(set.id)\"><i class=\"fa fa-trash fa-2x\" aria-hidden=\"true\"></i></button>\n          <button  mat-raised-button color=\"accent\"  (click)=\"resetProgress(set.id)\" >Clear progress</button>\n          <button  mat-raised-button color=\"primary\" (click)=\"startLearning(set)\">Start lesson</button>\n        </mat-action-row>\n   \n      </mat-expansion-panel>   </div>\n\n  </mat-accordion>\n</div>\n<br>\n<br>\n<br>\n<br>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatsComponent } from './Stats/Stats.component';\nimport { HomeComponent } from './Home/Home.component';\nimport { SettingsComponent } from './Settings/Settings.component';\nimport { HelpComponent } from './Help/Help.component';\nimport { LessonSummaryComponent } from './lesson-summary/lesson-summary.component';\nimport { LessonComponent } from './Lesson/Lesson.component';\nimport { SearchingModuleComponent } from './searching-module/searching-module.component';\nimport { CreateLearningSetComponent } from './Create-learning-set/Create-learning-set.component';\n\n\nconst routes: Routes = [\n  { path: 'stats-component', component: StatsComponent },\n  { path: 'home-component', component: HomeComponent },\n  { path: 'settings-component', component: SettingsComponent },\n  { path: 'help-component', component: HelpComponent },\n  { path: 'lesson-component/:id', component: LessonComponent },\n  { path: 'searchingModule-component', component: SearchingModuleComponent },\n  { path: 'create-learning-set-component', component: CreateLearningSetComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthService } from './auth.service';\nimport { User } from 'src/models/User';\nimport { environment } from 'src/environments/environment';\nimport { timer } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'SPA';\n  opened: boolean;\n\n\n  auth: AuthService;\n  user: User;\n  username = \"unknown\";\n\n  constructor(auth: AuthService, private route: ActivatedRoute,\n    private router: Router) {\n\n    this.auth = auth;\n    if (!this.auth.loggedIn()) {\n      this.router.navigate(['/home-component']);\n    }\n    else {\n      this.router.navigate(['/stats-component']);\n    }\n\n  }\n  ngOnInit(): void {\n\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if (this.user != null && this.user.userName != null) {\n      this.username = this.user.userName;\n    }\n  }\n\n  NavBar() {\n    this.opened = !this.opened;\n  }\n\n  help() {\n    this.router.navigate(['/help-component']);\n    this.NavBar();\n  }\n\n  search() {\n    this.router.navigate(['/searchingModule-component']);\n    this.NavBar();\n  }\n\n  settings() {\n    this.router.navigate(['/settings-component']);\n    this.NavBar();\n  }\n\n  login() {\n    const rslt = this.auth.loggedIn();\n    return rslt;\n  }\n\n  stats() {\n    this.router.navigate(['/stats-component']);\n    this.NavBar();\n  }\n  logout() {\n\n    this.auth.logout();\n    this.router.navigate(['/home-component']);\n    this.NavBar();\n  }\n\n  create() {\n\n      this.router.navigate(['/create-learning-set-component']);\n    this.NavBar();\n  }\n\n}\n","\r\n<mat-toolbar color=\"primary\">\r\n\r\n\r\n    <a>eLearning app</a>\r\n\r\n    <!-- This fills the remaining space of the current row -->\r\n\r\n\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <h2 *ngIf=\"auth.loggedIn()\" class=\"mt-2 mr-3\">Witaj {{username}}!</h2>\r\n    <!-- <mat-menu #appMenu=\"matMenu\">\r\n       \r\n    </mat-menu> -->\r\n\r\n    <button mat-icon-button *ngIf=\"login()\" (click)=\"NavBar()\" >\r\n        <mat-icon><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></mat-icon>\r\n    </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"example-container\" >\r\n    <mat-sidenav mode=\"over\"  #sidenav  position=\"end\" [(opened)]=\"opened\" style=\"min-height: 500px; background-color: white;\">\r\n        <mat-selection-list  [multiple]=\"false\" role=\"list\">\r\n            <mat-list-option role=\"listitem\" (click)=\"stats()\"> <div> <mat-icon><i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i></mat-icon>Your courses</div></mat-list-option>\r\n            <mat-list-option role=\"listitem\" (click)=\"search()\"><div> <mat-icon><i class=\"fa fa-search\" aria-hidden=\"true\"></i></mat-icon>Courses library</div></mat-list-option>\r\n            <mat-list-option role=\"listitem\" (click)=\"create()\" ><div> <mat-icon><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></mat-icon>Create own course</div></mat-list-option>\r\n            <mat-list-option role=\"listitem\" (click)=\"settings()\" ><div> <mat-icon><i class=\"fa fa-wrench\" aria-hidden=\"true\"></i></mat-icon>Settings</div></mat-list-option>\r\n            <mat-list-option role=\"listitem\" (click)=\"logout()\"><div> <mat-icon><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></mat-icon>Sign-out</div></mat-list-option>\r\n            <mat-list-option role=\"listitem\" (click)=\"help()\" ><div> <mat-icon><i class=\"fa fa-ambulance\" aria-hidden=\"true\"></i></mat-icon>Help</div></mat-list-option>\r\n        </mat-selection-list>\r\n\r\n\r\n\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content  >\r\n        <div class=\"full-height\" style=\"background: url('/assets/bg5.jpg') no-repeat center; background-color: rgba(255, 255, 255, 0.3);\r\n        background-blend-mode: lighten;\">\r\n        <router-outlet ></router-outlet>\r\n    </div> \r\n\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { RouterModule } from '@angular/router';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LessonComponent } from './Lesson/Lesson.component';\nimport 'rxjs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './Login/Login.component';\nimport { AuthService } from './auth.service';\nimport { HomeComponent } from './Home/Home.component';\nimport { registerLocaleData } from '@angular/common';\nimport { RegisterComponent } from './Register/Register.component';\nimport { CreateLearningSetComponent } from './Create-learning-set/Create-learning-set.component';\nimport { FormsModule } from '@angular/forms'\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { LessonSummaryComponent } from './lesson-summary/lesson-summary.component';\nimport { StatsComponent } from './Stats/Stats.component';\nimport { SettingsComponent } from './Settings/Settings.component';\nimport {HelpComponent} from './Help/Help.component';\nimport { SearchingModuleComponent } from './searching-module/searching-module.component';\n \nexport function tokenGetter() {\n   return localStorage.getItem('token');\n   console.log('got token');\n }\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HelpComponent,\n      SettingsComponent,\n      LessonComponent,\n      LoginComponent,\n      HomeComponent,\n      RegisterComponent,\n      CreateLearningSetComponent,\n      LessonSummaryComponent,\n      StatsComponent,\n      SearchingModuleComponent\n   ],\n   imports: [\n      FormsModule,\n      MatExpansionModule,\n      BrowserModule,\n      AppRoutingModule,\n      HttpClientModule,\n      TooltipModule.forRoot(),\n      MatCardModule,\n      MatListModule,\n      BrowserAnimationsModule,\n      ReactiveFormsModule,\n      MatSidenavModule,\n      MatMenuModule,\n      MatProgressBarModule,\n      MatSliderModule,\n      MatStepperModule,\n      MatCheckboxModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatButtonModule,\n      MatGridListModule,\n      RouterModule,\n      MatDialogModule,\n      FontAwesomeModule,\n      JwtModule.forRoot({\n         config: {\n           tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000']\n         }\n}), \n \n   ],\n   providers: [\n      AuthService,\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LearningItem } from 'src/models/LearningItem';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from 'src/models/User';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  helper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) { }\n\n\n  login(model: User) {\n\n    return this.http.post(this.baseUrl + 'login', model).pipe(\n      map((response: any) => {\n        const user = response;\n        if (user) {\n\n          localStorage.setItem('token', user.token);\n          localStorage.setItem('user', JSON.stringify(user.user)); \n          this.decodedToken = this.helper.decodeToken(user.token);\n          console.log(this.decodedToken);\n\n        }\n      })\n    );\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'register', model);\n  }\n\n  ifUserExist(model: any) {\n    return this.http.post(this.baseUrl + 'loginAvailable', model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.helper.isTokenExpired(token);\n  }\n\n\n  // getLearningItems()\n  // {\n  //   this.http.push('http://localhost:5000/api/content')\n  //   .subscribe((response: LearningItem[]) => {\n  //     this.Items = response;\n  //     this.Item = this.Items[0];\n  //   })\n  // }\n}\n","import { Component, OnInit, ViewChild, Directive, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n\n\n@Component({\n  selector: 'app-lesson-summary',\n  templateUrl: './lesson-summary.component.html',\n  styleUrls: ['./lesson-summary.component.css']\n})\nexport class LessonSummaryComponent implements OnInit {\n\n  @ViewChild('btn_focus') firstNameElement: ElementRef;\n\n  ngAfterViewInit(){\n    this.firstNameElement.nativeElement.focus();\n  }\n  ngOnInit() {\n    document.getElementById('button').focus();\n  }\n\n  dialog: MatDialogRef<LessonSummaryComponent>;\n  constructor(dialogRef: MatDialogRef<LessonSummaryComponent>, private route: ActivatedRoute,\n    private router: Router) {\n    this.dialog = dialogRef;\n  }\n  public continue = false;\n\n\n\n  ShowSummary() {\n    this.dialog.close();\n    window.location.reload();\n  }\n}\n","<h2 class=\"text-center mb-4\">Summary</h2>\n<p>\n  <br>\n  <mat-label class=\"text-center h4\">Congratulations! Your result was saved in your account.</mat-label>\n  <br>\n  <br>\n<p class=\"text-center\">\n  <button mat-raised-button mat-dialog-close routerLink=\"/stats-component\" routerLinkActive=\"active\" color=\"primary\" class=\"mr-4\">Ok</button>\n</p>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/models/User';\nimport { LearningSet } from 'src/models/LearningSet';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-searching-module',\n  templateUrl: './searching-module.component.html',\n  styleUrls: ['./searching-module.component.css']\n})\nexport class SearchingModuleComponent implements OnInit {\n\n  user: User;\n  learningSets: LearningSet[];\n\n  constructor(private http: HttpClient, private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getLearningSets();\n  }\n  step = 0;\n  setStep(index: number) {\n    this.step = index;\n  }\n\n\n  getLearningSets() {\n    this.user = JSON.parse(localStorage.getItem('user'));\n\n    this.http.get('http://localhost:5000/api/' + this.user.id + '/content/GetAllCourses')\n      .subscribe((response: LearningSet[]) => {\n        this.learningSets = response;\n      });\n    }\n\n\n  AddToMyBoard(id: string) {\n    console.log(id);\n    this.user = JSON.parse(localStorage.getItem('user'));\n\n    this.http.post('http://localhost:5000/api/' + this.user.id + '/content/' + id + '/AddCourseToBoard' , {}) .subscribe(\n      x => {\n        console.log(x);\n        this.getLearningSets();\n      },\n      error => console.log(error)\n    );\n\n  }\n}\n","<div class=\"full-height\">\n  <br>\n<h1 class=\"text-center \">Courses library</h1>\n<div class=\"m-5\">\n\n  <mat-accordion class=\"example-headers-align \" *ngIf=\"learningSets.length!=0\">\n\n    <div *ngFor=\"let item of learningSets; let i = index\">\n      <mat-expansion-panel class=\"mt-2 glassy\" [expanded]=\"step === i\" (opened)=\"setStep(i)\" hideToggle>\n        <mat-expansion-panel-header>\n          <mat-panel-title >\n            <h2  class=\"cut-text mt-3\">{{item.name}}</h2>\n           </mat-panel-title>\n           <mat-panel-description>\n            <h2 class=\"mt-3 \">FREE</h2>\n           </mat-panel-description>\n        </mat-expansion-panel-header>\n\n        <br>\n        <h4>{{item.description}}</h4>\n        <br>\n        <h2 class=\"mt-3 \">Author: root</h2>\n\n        <mat-action-row>\n          <button mat-raised-button color=\"primary\" (click)=\"AddToMyBoard(item.id)\">Add to my courses</button>\n\n\n        </mat-action-row>\n      </mat-expansion-panel> \n    </div>\n  </mat-accordion>\n</div>\n<div *ngIf=\"learningSets.length==0\">\n  <br>\n  <h1 class=\"text-center\">There are no courses available... </h1>\n\n</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}